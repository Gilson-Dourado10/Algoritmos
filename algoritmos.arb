# Input : arr[] = {10, 20, 80, 30, 60, 50,

# 110, 100, 130, 170}

# x = 110;

# Output : 6

# Element x is present at index 6

# Input : arr[] = {10, 20, 80, 30, 60, 50,

#           110, 100, 130, 170}

# x = 175;

# Output : -1

# Element x is not present in arr[].

# class SearchPattern

# attr_accessor :array, :element

# def initialize(params)

# self.array = params[:array]

# self.element = params[:element]

# end

# def call

#  response

# end

# private

# def response

# return included_element if array.include?(element)

# not_included_element

# end

# def included_element

# "Element #{element} is present at index #{array.index(element)}"

# end

# def not_included_element

# "Element #{element} is not present in array provided"

# end

# end

def linear_search(array, key)
  if array.index(key).nil?

    -1

  else
    "#{key} at index #{array.index(key)}"
  end
end

arr = [10, 20, 80, 30, 60, 50, 110, 100, 130, 170]

key = 110
p linear_search(arr, key)




